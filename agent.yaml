apiVersion: adl.dev/v1
kind: Agent
metadata:
  name: browser-agent
  description: AI agent for browser automation and web testing using Playwright
  version: 0.4.2
spec:
  capabilities:
    streaming: true
    pushNotifications: false
    stateTransitionHistory: false
  config:
    browser:
      headless: true
      engine: "chromium"
      stealth_mode: false
      session_timeout: "2m"
      user_agent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
      viewport_width: 1920
      viewport_height: 1080
      header_accept: "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"
      header_accept_language: "en-US,en;q=0.9"
      header_accept_encoding: "gzip, deflate, br"
      header_dnt: "1"
      header_connection: "keep-alive"
      header_upgrade_insecure_requests: "1"
      data_dir: "/tmp/playwright/artifacts"
      xvfb_enabled: false
      xvfb_display: ":99"
      xvfb_screen_resolution: "1920x1080x24"
      args:
        - "--disable-blink-features=AutomationControlled"
        - "--disable-features=VizDisplayCompositor"
        - "--no-first-run"
        - "--disable-default-apps"
        - "--disable-extensions"
        - "--disable-plugins"
        - "--disable-sync"
        - "--disable-translate"
        - "--hide-scrollbars"
        - "--mute-audio"
        - "--no-zygote"
        - "--disable-background-timer-throttling"
        - "--disable-backgrounding-occluded-windows"
        - "--disable-renderer-backgrounding"
        - "--disable-ipc-flooding-protection"
  skills:
    - id: navigate_to_url
      name: navigate_to_url
      description: Navigate to a specific URL and wait for the page to fully load
      tags:
        - navigation
        - browser
        - playwright
      schema:
        type: object
        properties:
          url:
            type: string
            description: The URL to navigate to
          wait_until:
            type: string
            description: When to consider navigation succeeded (domcontentloaded, load, networkidle)
            default: load
          timeout:
            type: integer
            description: Maximum navigation timeout in milliseconds
            default: 30000
        required:
          - url
      inject:
        - logger
        - playwright
    - id: click_element
      name: click_element
      description: Click on an element identified by selector, text, or other locator strategies
      tags:
        - interaction
        - click
        - playwright
      schema:
        type: object
        properties:
          selector:
            type: string
            description: CSS selector, XPath, or text to identify the element
          click_count:
            type: integer
            description: Number of times to click
            default: 1
          button:
            type: string
            description: Mouse button to use (left, right, middle)
            default: left
          force:
            type: boolean
            description: Force click even if element is not visible
            default: false
          timeout:
            type: integer
            description: Maximum time to wait for element in milliseconds
            default: 30000
        required:
          - selector
      inject:
        - logger
        - playwright
    - id: fill_form
      name: fill_form
      description: Fill form fields with provided data, handling various input types
      tags:
        - form
        - input
        - automation
        - playwright
      schema:
        type: object
        properties:
          fields:
            type: array
            items:
              type: object
              properties:
                selector:
                  type: string
                  description: Selector for the form field
                value:
                  type: string
                  description: Value to fill in the field
                type:
                  type: string
                  description: Type of input (text, select, checkbox, radio)
              required:
                - selector
                - value
            description: List of form fields to fill
          submit:
            type: boolean
            description: Whether to submit the form after filling
            default: false
          submit_selector:
            type: string
            description: Selector for the submit button if submit is true
        required:
          - fields
      inject:
        - logger
        - playwright
    - id: extract_data
      name: extract_data
      description: Extract data from the page using selectors and return structured information
      tags:
        - scraping
        - extraction
        - data
        - playwright
      schema:
        type: object
        properties:
          extractors:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: Name for the extracted data field
                selector:
                  type: string
                  description: CSS selector or XPath to extract data from
                attribute:
                  type: string
                  description: Attribute to extract (text, href, src, etc.)
                  default: text
                multiple:
                  type: boolean
                  description: Extract all matching elements or just the first
                  default: false
              required:
                - name
                - selector
            description: List of data extractors to run
          format:
            type: string
            description: Output format (json, csv, text)
            default: json
        required:
          - extractors
      inject:
        - logger
        - playwright
    - id: take_screenshot
      name: take_screenshot
      description: Capture a screenshot of the current page or specific element
      tags:
        - screenshot
        - capture
        - visual
        - playwright
      schema:
        type: object
        properties:
          full_page:
            type: boolean
            description: Capture the entire scrollable page
            default: false
          selector:
            type: string
            description: Optional selector to screenshot specific element
          type:
            type: string
            description: Image format (png, jpeg)
            default: png
          quality:
            type: integer
            description: Quality for jpeg images (0-100)
            default: 80
        required: []
      inject:
        - logger
        - playwright
    - id: execute_script
      name: execute_script
      description: Execute custom JavaScript code in the browser context
      tags:
        - javascript
        - execution
        - custom
        - playwright
      schema:
        type: object
        properties:
          script:
            type: string
            description: JavaScript code to execute
          args:
            type: array
            items:
              type: string
            description: Arguments to pass to the script
          return_value:
            type: boolean
            description: Whether to return the script execution result
            default: true
        required:
          - script
      inject:
        - logger
        - playwright
    - id: handle_authentication
      name: handle_authentication
      description: Handle various authentication scenarios including basic auth, OAuth, and custom login forms
      tags:
        - authentication
        - login
        - security
        - playwright
      schema:
        type: object
        properties:
          type:
            type: string
            description: Authentication type (basic, form, oauth)
          username:
            type: string
            description: Username or email for authentication
          password:
            type: string
            description: Password for authentication
          login_url:
            type: string
            description: URL of the login page for form authentication
          username_selector:
            type: string
            description: Selector for username field in form authentication
          password_selector:
            type: string
            description: Selector for password field in form authentication
          submit_selector:
            type: string
            description: Selector for submit button in form authentication
        required:
          - type
      inject:
        - logger
        - playwright
    - id: wait_for_condition
      name: wait_for_condition
      description: Wait for specific conditions before proceeding with automation
      tags:
        - wait
        - synchronization
        - timing
        - playwright
      schema:
        type: object
        properties:
          condition:
            type: string
            description: Type of condition (selector, navigation, function, timeout, networkidle)
          selector:
            type: string
            description: Selector to wait for if condition is 'selector'
          state:
            type: string
            description: State to wait for (visible, hidden, attached, detached)
            default: visible
          timeout:
            type: integer
            description: Maximum time to wait in milliseconds
            default: 30000
          custom_function:
            type: string
            description: Custom JavaScript function to evaluate for 'function' condition
        required:
          - condition
      inject:
        - logger
        - playwright
  agent:
    provider: ""
    model: ""
    systemPrompt: |
      You are an expert Playwright browser automation assistant with the ability to create downloadable artifacts. Your primary role is to help users automate web browser tasks efficiently and reliably.

      Your core capabilities include:
      1. **Web Navigation**: Navigate to URLs, handle redirects, and manage page loads
      2. **Element Interaction**: Click buttons, fill forms, select dropdowns, and interact with any web element
      3. **Data Extraction**: Scrape and extract structured data from web pages
      4. **Form Automation**: Fill and submit complex forms with validation
      5. **Screenshot Capture**: Take full-page or element-specific screenshots
      6. **JavaScript Execution**: Run custom scripts in the browser context
      7. **Authentication Handling**: Manage various authentication methods
      8. **Synchronization**: Wait for specific conditions and handle dynamic content
      9. **Artifact Creation**: Create downloadable files for screenshots, extracted data, and CSV exports

      Key expertise areas:
      - Modern web technologies (SPA, dynamic content, AJAX)
      - Selector strategies (CSS, XPath, text, accessibility)
      - Browser automation best practices
      - Error handling and retry mechanisms
      - Cross-browser compatibility (Chromium, Firefox, WebKit)
      - Performance optimization for automation scripts
      - Handling pop-ups, alerts, and iframes
      - File uploads and downloads
      - Network interception and modification
      - Mobile and responsive testing

      When helping users:
      - Always use robust selectors that won't break easily
      - Implement proper wait strategies for dynamic content
      - Handle errors gracefully with informative messages
      - Suggest efficient approaches for the task
      - Consider accessibility and best practices
      - Provide clear explanations of automation steps
      - Optimize for speed while maintaining reliability

      **IMPORTANT - Artifact Creation**:
      When users request screenshots, the take_screenshot tool automatically creates downloadable artifacts. The screenshot will be available via a download URL returned in the response.

      For data extraction, you can use the create_artifact tool to save extracted data as downloadable files (JSON/CSV/TXT).

      Your automation solutions should be maintainable, efficient, and production-ready.
  services:
    playwright:
      type: service
      interface: BrowserAutomation
      factory: NewPlaywrightService
      description: Playwright service for browser automation and web testing
  server:
    port: 8080
    debug: false
  language:
    go:
      module: github.com/inference-gateway/browser-agent
      version: "1.25"
  acronyms:
    - DOM
    - CSS
    - XPath
    - URL
    - API
    - SPA
    - AJAX
  scm:
    provider: github
    url: https://github.com/inference-gateway/browser-agent
    github_app: true
    issue_templates: true
  sandbox:
    flox:
      enabled: true
  artifacts:
    enabled: true
